{"version":3,"sources":["logo.svg","HabitTable.js","App.js","reportWebVitals.js","index.js"],"names":["HabitLabel","props","className","habitTitle","HabitSquare","title","date","dateAndStatus","onClick","onSquareClick","HabitRow","squares","i","numOfDays","push","habit","HabitTable","handleSquareClick","action","console","log","JSON","stringify","fetch","method","headers","body","then","response","json","habits","Table","striped","bordered","map","AddHabit","Button","variant","FormModal","Modal","size","aria-labelledby","centered","Header","closeButton","onClose","Title","id","Body","HabitForm","titleInput","categoryInput","checkBoxIds","Footer","onCreate","dayLabels","labelIdPairs","currentPair","Form","Group","controlId","Label","Control","placeholder","ref","day","Check","inline","label","name","type","defaultChecked","App","args","parse","document","getElementById","text","useState","useRef","modalShow","setModalShow","handleModalClose","show","current","value","category","target_days_str","checked","concat","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.22dbd709.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Table } from 'react-bootstrap';\n\nfunction HabitLabel(props) {\n    return (\n        <td className=\"habit-label\" >{props.habitTitle}</td>\n    );\n}\n\nfunction HabitSquare(props) {\n    const title = props.habitTitle;\n    const date = props.dateAndStatus['date'];\n    if (props.dateAndStatus['completed'] == true) {\n        return (\n            <td className=\"habit-square\" onClick={() => props.onSquareClick(title, date, 'removing')}>X</td>\n        );\n    }\n    return (\n        <td className=\"habit-square\" onClick={() => props.onSquareClick(title, date, 'adding')}></td>\n    );\n}\n\nfunction HabitRow(props) {\n    const squares = [];\n    for (let i = 0; i < props.numOfDays; i++) {\n        squares.push(<HabitSquare habitTitle={props.habit['habit_title']} dateAndStatus={props.habit['dates_completed'][i]} onSquareClick={props.onSquareClick} />);\n    }\n    return (\n        <tr>\n            <HabitLabel habitTitle={props.habit['habit_title']} />\n            {squares}\n        </tr>\n    );\n}\n\nexport function HabitTable(props) {\n    console.log(props.habits)\n\n    function handleSquareClick(title, date, action) {\n        console.log(\"square clicked\");\n\n        console.log(\n            JSON.stringify({\n                \"action\": action,\n                \"title\": title,\n                \"date\": date,\n            }),\n        );\n\n        //Sends habit information to server in JSON form.\n        fetch('/update-completion', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                \"action\": action,\n                \"title\": title,\n                \"date\": date,\n            }),\n        }).then(response => response.json());\n    }\n    return (\n        <Table striped bordered className=\"weekly-view\">\n            <thead>\n                <tr>\n                    <th>Habit</th>\n                    <th>M</th>\n                    <th>T</th>\n                    <th>W</th>\n                    <th>Th</th>\n                    <th>F</th>\n                    <th>Sa</th>\n                    <th>Su</th>\n                </tr>\n            </thead>\n            <tbody>\n                {props.habits.map((habit) => (\n                    <HabitRow habit={habit} numOfDays={7} onSquareClick={handleSquareClick} />\n                ))}\n            </tbody>\n        </Table>\n    );\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Form, Modal } from 'react-bootstrap';\nimport { useState, useRef } from 'react';\nimport { HabitTable } from './HabitTable.js';\n\nfunction AddHabit(props) {\n  return (\n    <Button variant=\"outline-success\" onClick={props.onClick}>Add Habit</Button>\n  );\n}\n\nfunction FormModal(props) {\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton onClick={props.onClose}>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Create a New Habit\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <HabitForm titleInput={props.titleInput} categoryInput={props.categoryInput} checkBoxIds={props.checkBoxIds} />\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"success\" onClick={() => props.onCreate()}>\n          Create Habit\n        </Button >\n      </Modal.Footer>\n    </Modal >\n  );\n\n}\n\nfunction HabitForm(props) {\n  const dayLabels = ['Monday', 'Tuedsay', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n  let labelIdPairs = [];\n\n  //Places daylabels and checkBoxIds into tuple like structure >> stored in labelIdPairs for mapping\n  for (let i = 0; i < 7; i++) {\n    let currentPair = [dayLabels[i], props.checkBoxIds[i]];\n    labelIdPairs.push(currentPair);\n  }\n\n  return (\n    <Form >\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Habit Name</Form.Label>\n        <Form.Control placeholder=\"Habit Name\" ref={props.titleInput} />\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n        <Form.Label>Category</Form.Label>\n        <Form.Control placeholder=\"Category(optional)\" ref={props.categoryInput} />\n      </Form.Group>\n      <Form.Label>Target Days</Form.Label>\n      <Form.Group>\n        {labelIdPairs.map((day) => (\n          <Form.Check\n            inline\n            label={day[0]}\n            name=\"group1\"\n            type='checkbox'\n            defaultChecked='True'\n            id={day[1]}\n          />\n        ))}\n      </Form.Group>\n    </Form>\n  );\n\n}\n\n\nfunction App() {\n  const args = JSON.parse(document.getElementById(\"data\").text);\n  const [habits, setHabits] = useState(args.habits);\n  console.log(habits);\n\n  let titleInput = useRef(null);\n  let categoryInput = useRef(null);\n  let checkBoxIds = [\"monCB\", \"tuesCB\", \"wedCB\", \"thursCB\", \"friCB\", \"satCB\", \"sunCB\"];\n\n  const [modalShow, setModalShow] = useState(false);\n  const handleModalClose = () => setModalShow(false);\n  const handleModalShow = () => setModalShow(true);\n\n  function onCreateClick() {\n\n    let title = titleInput.current.value;\n    let category = categoryInput.current.value;\n    let target_days_str = '';\n\n    //Builds target_days_str by checking to see if each checkbox is checked in order from Monday through Sunday.\n    for (let i = 0; i < 7; i++) { //7 days in the week\n      let checkBox = document.getElementById(checkBoxIds[i]);\n      if (checkBox.checked) {\n        target_days_str = target_days_str.concat(\"1\");\n      } else {\n        target_days_str = target_days_str.concat(\"0\");\n      }\n    }\n\n    //Sends habit information to server in JSON form.\n    fetch('/create', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        \"title\": title,\n        \"category\": category,\n        \"target_days_str\": target_days_str\n      }),\n    }).then(response => response.json());\n\n    //Clears text fields and hides modal\n    titleInput.current.value = \"\";\n    categoryInput.current.value = \"\";\n    handleModalClose();\n  }\n\n\n  return (\n    <>\n      <AddHabit onClick={handleModalShow} />\n      <FormModal show={modalShow} onClose={handleModalClose} onCreate={onCreateClick}\n        titleInput={titleInput} categoryInput={categoryInput} checkBoxIds={checkBoxIds} />\n\n      <br /><br />\n      <HabitTable habits={habits} />\n      <a href=\"/logout\"><Button variant=\"outline-success\" id=\"logout\">Log Out!</Button></a>\n    </>\n  );\n\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}